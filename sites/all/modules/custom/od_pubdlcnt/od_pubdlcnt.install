<?php
// $Id: 

/**
 * @file
 */

/**
 * Implements hook_schema().
 */
function od_pubdlcnt_schema() {
  $schema = array();

  $schema['od_pubdlcnt_url'] = array(
    'description' => 'TODO: пожалуйста, опишите эту таблицу!',
    'fields' => array(
      'url_key' => array(
        'description' => 'TODO: пожалуйста, опишите это поле!',
        'type' => 'varchar',
        'length' => '16',
        'not null' => TRUE,
      ),
      'scheme' => array(
        'description' => 'TODO: пожалуйста, опишите это поле!',
        'type' => 'varchar',
        'length' => '16',
        'not null' => FALSE,
      ),
      'port' => array(
        'description' => 'TODO: пожалуйста, опишите это поле!',
        'type' => 'varchar',
        'length' => '8',
        'not null' => FALSE,
      ),
      'host' => array(
        'description' => 'TODO: пожалуйста, опишите это поле!',
        'type' => 'varchar',
        'length' => '32',
        'not null' => FALSE,
      ),
      'path' => array(
        'description' => 'TODO: пожалуйста, опишите это поле!',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'query' => array(
        'description' => 'TODO: пожалуйста, опишите это поле!',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'fragment' => array(
        'description' => 'TODO: пожалуйста, опишите это поле!',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('url_key'),
  );

  $schema['od_pubdlcnt'] = array(
    'description' => 'TODO: пожалуйста, опишите эту таблицу!',
    'fields' => array(
      'id' => array(
        'description' => 'TODO: пожалуйста, опишите это поле!',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'entity_id' => array(
        'description' => 'node ID of which the file exists',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'entity_type' => array(
        'description' => 'TODO: пожалуйста, опишите это поле!',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'utime' => array(
        'description' => 'dowload date in unix timestamp',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'count' => array(
        'description' => 'total download count',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'revision_id' => array(
        'description' => 'TODO: пожалуйста, опишите это поле!',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'context' => array(
        'description' => 'TODO: пожалуйста, опишите это поле!',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'nid' => array('entity_type', 'entity_id', 'revision_id', 'context')
    ),
  );

  $schema['od_pubdlcnt_history'] = array(
    'description' => 'TODO: пожалуйста, опишите эту таблицу!',
    'fields' => array(
      'id' => array(
        'description' => 'record ID (unique number)',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'fid' => array(
        'description' => 'file ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'url_key' => array(
        'description' => 'TODO: пожалуйста, опишите это поле!',
        'type' => 'varchar',
        'length' => '16',
        'not null' => FALSE,
      ),
      'utime' => array(
        'description' => 'dowload date in unix timestamp',
        'type' => 'int',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

/**
 * Recreates table `od_pubdlcnt`
 */
function od_pubdlcnt_update_7001() {
  $transaction = db_transaction();
  try {
    $table = 'od_pubdlcnt';
    db_drop_table($table);
    $schema = drupal_get_schema($table, TRUE);
    db_create_table($table, $schema);

    // Commit it RIGHT NOW! Please.
    unset($transaction);
    $transaction = null;
  }
  catch (Exception $e) {
    $transaction->rollback();
    throw $e;
  }
}
