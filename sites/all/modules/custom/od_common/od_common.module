<?php
/**
 * @file
 */

/* Load additional files */
$__dirname = dirname(__FILE__);
require_once $__dirname. '/od_common.ajax_commands.inc'; //Load ajax commands

/**
 * Implements hook_module_implements_alter()
 */
function od_common_module_implements_alter(&$implementations, $hook) {
  //Убиваем имплементацию hook_node_view() модуля dkan_datastore
  if ($hook == 'node_view' && isset($implementations['dkan_datastore'])) {
    unset($implementations['dkan_datastore']);
  }
  elseif ($hook == 'i18n_object_info' && isset($implementations['i18n_taxonomy'])) {
    unset($implementations['i18n_taxonomy']);
  }
}

/**
 * Implementation of hook_ctools_plugin_directory() to let the system know
 * where all our own plugins are.
 */
function od_common_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/content_types';
  }
}

/**
 * Implements hook_permission()
 */
function od_common_permission() {
  $perms = array();

  $perms['od_common localize access taxonomy_term'] = array(
    'title' => t('Localize taxonomy terms'),
  );

  return $perms;
}

/**
 * Implements hook_form_alter()
 */
function od_common_form_alter($form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'od_preprocess_wizard_entityform_edit_form':
      od_common_module('od_preprocess_wizard_entityform_edit_alter');
      _od_common_form_od_preprocess_wizard_entityform_edit_form_alter($form, $form_state);
      break;
    case 'views_exposed_form':
      od_common_module('map_views_alter');
      _od_common_map_views_form_views_exposed_form_alter($form, $form_state);
      break;
  }
}

/**
 * Implements hook_preprocess_THEMEHOOK()
 */
function od_common_preprocess_date_combo(&$vars) {
  $paths = array(
    'dataset-actions/add-new-dataset',
    'eform/submit/od-preprocess-wizard',
  );

  if (drupal_match_path($_GET['q'], implode("\n", $paths))) {
    $vars['theme_hook_suggestion'] = 'od_common_date_combo';

    //Include our module that contains necessary theme function
    od_common_module('od_combo_theme_replacement');
  }
}

/**
 * Implements hook_theme()
 */
function od_common_theme() {
  $themes = array();

  $themes['od_common_date_combo'] = array(
    //'file' => 'date.theme',
    //'path' => drupal_get_path('module', 'od_common'),
    'render element' => 'element',
  );

  return $themes;
}

/**
 * Implements hook_menu_alter().
 * Изменяем название вкладки Edit и View для Набора данных.
 */
function od_common_menu_alter(&$items) {
  unset($items['node/%node/view']['title']);
  $items['node/%node/view']['title callback'] = 'od_common_view_tab_title';
  $items['node/%node/view']['title arguments'] = array(1);
  
  unset($items['node/%node/edit']['title']);
  $items['node/%node/edit']['title callback'] = 'od_common_edit_tab_title';
  $items['node/%node/edit']['title arguments'] = array(1);
  
}

function od_common_view_tab_title($node) {
  if ($node->type == 'dataset') {
    return t('Passport');
  }
  return t('View');
}

function od_common_edit_tab_title($node) {
  if ($node->type == 'dataset') {
    return t('Edit passport');
  }
  return t('Edit');
}

/**
 * Implementation of hook_menu().
 */
function od_common_menu() {
  $items = array();
  
  $items['node/%node/actualize'] = array(
    'title' => 'Actualize passport',
    'page callback' => 'od_common_actualize_page_callback',
    'page arguments' => array(1),
    'access callback' => 'od_common_actualize_access_callback',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
    'file' => 'od_common.actualize_pasport.page.inc',
  );
  
  return $items;
}

function od_common_actualize_access_callback($node) {
  if (!(is_object($node) && isset($node->type) && $node->type == 'dataset')) {
    return FALSE;
  }
  elseif ($GLOBALS['user']->uid == 1) {
    return TRUE;
  }

  return (od_publisher_node_access($node, 'edit', $GLOBALS['user']) == NODE_ACCESS_ALLOW);
}

function od_common_field_formatter_info() {
  $info = array();

  $info['od_common_file_dlcnt'] = array(
    'label' => t('Download counts of a file'),
    'field types' => array('file', 'recline_field'),
    'settings' => array(),
  );

  return $info;
}

function od_common_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  switch ($display['type']) {
    case 'od_common_file_dlcnt':
      od_common_module('pubdlcnt');
      foreach ($items as $delta => $item) {
        $count = (integer) od_common_pubdlcnt_count((object)$item);
        $build = array(
          '#prefix' => '<div class="od-common-pubdlcnt-count-wrapper">',
          '#suffix' => '</div>',
          'file' => array(
            '#markup' => "<span class=\"value\">{$count}</span>"
          ),
        );

        $element[$delta] = $build;
      }
      break;
  }

  return $element;
}

/**
 * @param $module
 * @return mixed
 * @throws Exception
 */
function od_common_module($module) {
  $cache = &drupal_static(__FUNCTION__, array());
  $cache_key = $module;
  if (!isset($cache[$cache_key])) {
    //module_load_include($module. '.inc', 'od_common');
    $filepath = drupal_get_path('module', 'od_common'). '/submodules/'. $module. '.inc';
    $cache[$cache_key] = file_exists($filepath);
    if (!$cache[$cache_key]) {
      throw new Exception("od_common module named \"{$module}\" was not found in \"{$filepath}\"");
    }

    require_once $filepath;
  }

  return $cache[$cache_key];
}

/**
 * @param $module
 * @return bool
 */
function od_common_module_loaded($module) {
  $cache = &drupal_static('od_common_module', array());
  $cache_key = $module;

  return isset($cache[$cache_key]);
}

/**
 * Implements hook_page_delivery_callback_alter()
 */
function od_common_page_delivery_callback_alter(&$callback) {
  if (od_common_module_loaded('od_preprocess_wizard_entityform_edit_alter')) {
    _od_common_page_delivery_callback_alter($callback);
  }
}