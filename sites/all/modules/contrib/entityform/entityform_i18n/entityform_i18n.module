<?php

/**
 * @file
 * Profile2 i18n integration module via entity API i18n support.
 *
 * @see EntityDefaultI18nController
 */

/**
 * Implements hook_entity_info_alter().
 */
function entityform_i18n_entity_info_alter(&$info) {
  // Enable i18n support via the entity API.
  $info['entityform_type']['i18n controller class'] = 'EntityDefaultI18nStringController';
}

/**
 * Implements hook_entity_property_info_alter().
 */
function entityform_i18n_entity_property_info_alter(&$info) {
  // Mark some properties as translatable, but also denote that translation
  // works with i18n_string.
  foreach ($info['entityform_type']['properties'] as $prop_name => $value) {
    if ('label' == $prop_name || !empty($info['entityform_type']['properties'][$prop_name]['entityform_i18n'])) {
      $info['entityform_type']['properties'][$prop_name]['translatable'] = TRUE;
      $info['entityform_type']['properties'][$prop_name]['i18n string'] = TRUE;
    }
  }
}

/**
 * Implements hook_entityform_type_insert().
 */
function entityform_i18n_entityform_type_insert($entityform_type) {
  i18n_string_object_update('entityform_type', $entityform_type);
}

/**
 * Implements hook_entityform_type_update().
 */
function entityform_i18n_entityform_type_update($entityform_type) {
  // Account for name changes.
  if ($entityform_type->original->type != $entityform_type->type) {
    i18n_string_update_context("entityform:entityform_type:{$entityform_type->original->type}:*", "entityform:entityform_type:{$entityform_type->type}:*");
  }
  i18n_string_object_update('entityform_type', $entityform_type);
}

/**
 * Implements hook_entityform_type_delete().
 */
function entityform_i18n_entityform_type_delete($entityform_type) {
  i18n_string_object_remove('entityform_type', $entityform_type);
}
