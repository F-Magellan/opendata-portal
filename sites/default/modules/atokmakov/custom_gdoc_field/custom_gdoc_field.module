<?php

//include_once('inc/class.spreadsheet.php');

/**
 * @file
 * A field formatter for the File field, which renders the file as
 * an embedded document, using Google's Google Docs embeddable file viewer.
 * At the current time this viewer will reasonably display files of these
 * types: Adobe .pdf, Microsoft .doc/.docx, .xls/.xlsx. and .ppt/.pptx.
 *
 * The field may be resized and/or otherwise modified using the css selector
 * ".gdoc-field"
 */


/**
 * Implements hook_field_formatter_info_alter().
 *
 * Add a new formatter to the
 * list of formatters available for the File field type.
 */
function custom_gdoc_field_menu() {
  $items['show_gdoc/%/%'] = array(
    'page callback' => 'custom_gdoc_field_show',
    'page arguments' => array(1,2),
    //'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  return $items;
}
 

function custom_gdoc_field_field_formatter_info_alter(&$info) {
  $new_formatter = array(
    'label' => t('Embedded viewer'),
    'field types' => array(0 => 'link_field'),
    'settings' => array(),
    'module' => 'custom_gdoc_field',
  );
  $info['custom_gdoc_field_embedded_doc'] = $new_formatter;
}

/**
 * Implements hook_field_formatter_view().
 *
 * Renders the ouput of an
 * 'Embedded Google Docs viewer' formatted field within an iframe that
 * pulls in the Google Docs viewer to display the file inline.
 *
 */
function custom_gdoc_field_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {

  $element = array();
  switch ($display['type']) {
    // This formatter outputs the field within an iframe.
    case 'custom_gdoc_field_embedded_doc':
      //dsm($entity);
      //drupal_add_js(drupal_get_path('module', 'custom_gdoc_field') . '/custom_gdoc_field.js');
      foreach ($items as $delta => $item) {
        $filename = array_pop(explode('/', $item['url']));
        $element[$delta]['#markup'] = l($filename, $item['url'], array('absolute' => TRUE));
        $options = array(
          //'absolute' => TRUE, 
          'query' => array(
            //'key' => $item['title'],
            //'rm' => 'minimal',
            //'output' => 'html',
            //'widget' => 'true',
            //'chrome' => 'false',
            'width' => '1000', 
            'height' => '700', 
            'iframe' => 'true'
          ), 
          'attributes' => array(
            'class' => 'colorbox-load'
          ),
        );
        $element[$delta]['#markup'] .= '&nbsp;|&nbsp;' .
          l(t('Viev file'), 'show_gdoc/' . $entity->nid . '/' . $delta, $options);
        /*
        $element[$delta]['#markup'] .= '&nbsp;|&nbsp;' . 
          l(t('Viev file'), 'https://docs.google.com/a/gosbook.ru/spreadsheet/ccc', $options); */

      }
      break;
  }
  return $element;
}

/*
function custom_gdoc_field_node_presave($node) {
  if ($node->type == 'test') {
    //dsm($node);
    foreach ($node->field_test_link['und'] as $delta => $item) {
      if (!empty($item['url']) && empty($item['title'])) {
        $id = _upload_file($item['url']);
        if ($id) {
          _share_gdoc($id);
          $node->field_test_link['und'][$delta]['title'] = $id;
          drupal_set_message(t('File uploaded to Google docs'), 'status');
        }
        else {
          drupal_set_message(t('Fail to u	pload file into Google docs'), 'error');          
        }
      }
    }
  }
} 


function _upload_file($filename = NULL) {
  $id = NULL;
  if ($filename) {
  
    $file = file_get_contents($filename);
    $file = str_replace(';', ',', $file);
    
    $filename = basename($filename);

    $header[] = 'Authorization: GoogleLogin auth=' . _google_login();
    $header[] = 'Content-type: text/csv';
    $header[] = 'Slug: ' . $filename;
    $header[] = 'Content-Length: ' . strlen($file);
    
    $url = 'https://docs.google.com/feeds/documents/private/full';
    
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);            
    curl_setopt($ch, CURLOPT_POST, TRUE);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $file);
    curl_setopt($ch, CURLOPT_HTTPHEADER, $header);
    $response = curl_exec($ch);
    curl_close($ch);

    $xml = json_decode(json_encode((array) simplexml_load_string($response)),1);
    $content = ($xml) ? drupal_parse_url($xml['content']['@attributes']['src']) : NULL;
    $id = ($content) ? $content['query']['key'] : NULL;
  }
  return $id;
}

function _share_gdoc($id = NULL) {
  if ($id) {
    $url = 'https://docs.google.com/feeds/default/private/full/' . urlencode('spreadsheet:' . $id) . '/acl';
    
    $data = '<?xml version="1.0" encoding="UTF-8"?>' .
            '<entry xmlns="http://www.w3.org/2005/Atom" ' .
            'xmlns:gAcl="http://schemas.google.com/acl/2007">' .
            '<category scheme="http://schemas.google.com/g/2005#kind" ' .
            'term="http://schemas.google.com/acl/2007#accessRule"/>' .
            '<gAcl:role value="reader"/>' .
            '<gAcl:scope type="default"/>' .
            '</entry>';

    $header[] = 'Authorization: GoogleLogin auth=' . _google_login();
    $header[] = 'Content-type: application/atom+xml';
    $header[] = 'Content-Length: ' . strlen($data);
    $header[] = 'GData-Version: 3.0';  
    
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);            
    curl_setopt($ch, CURLOPT_POST, TRUE);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
    curl_setopt($ch, CURLOPT_HTTPHEADER, $header);
    $response = curl_exec($ch);
    curl_close($ch);
  }
}


function _google_login() {
  $clientlogin_url = "https://www.google.com/accounts/ClientLogin";
  $clientlogin_post = array(
      "accountType" => "HOSTED_OR_GOOGLE",
      "Email" => "a.tokmakov@gosbook.ru",
      "Passwd" => "atokmakov",
      "service" => "writely",
      "source" => "your application name"
  );

  $curl = curl_init($clientlogin_url);

  curl_setopt($curl, CURLOPT_POST, true);
  curl_setopt($curl, CURLOPT_POSTFIELDS, $clientlogin_post);
  curl_setopt($curl, CURLOPT_HTTPAUTH, CURLAUTH_ANY);
  curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);

  $response = curl_exec($curl);
  preg_match("/Auth=([a-z0-9_-]+)/i", $response, $matches);
  return (count($matches)) ? $matches[1] : FALSE;
} */

function custom_gdoc_field_show($nid = NULL, $fid = NULL) {

  if (!is_null($nid) && !is_null($fid)) {
    $node = node_load($nid);
    $file_url = $node->field_oddata_source['und'][$fid]['url'];
    $file_type = $node->field_oddata_source['und'][$fid]['title'];
    
    $content = custom_render_opendata($file_url, $file_type);
    print '<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">';
    print '<html>';
    print '<head>';
    print '<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />';
    print drupal_get_css();
    print '</head>';
    print '<body>';
    print theme_status_messages(array('display'=>NULL));
    print $content;
    print '</body>';
    print '</html>';
  }
}

