<?php

/**
 * Arc2 library including.
 */
function arc2() {
  // Get arc2 library path.
  $path = libraries_get_path('ARC2');

  // Return if library doesn't exist.
  if (!$path) {
    return FALSE;
  }

  // Include arc2 library.
  require_once DRUPAL_ROOT . '/' . $path . '/arc/ARC2.php';
  return TRUE;
}

/**
 * Implements hook_menu().
 */
function arc2_menu() {
  // Init variables.
  $items = array();

  $items['arc2/xml'] = array(
    'title' => 'XML-file',
    'page callback' => 'arc2_xml_page',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['arc2/print'] = array(
    'title' => 'XML-file',
    'page callback' => 'arc2_print_page',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Page callback (arc2/xml).
 */
function arc2_xml_page() {
  // Get $_GET parameters for current page.
  $query = drupal_get_query_parameters();

  // Get some parameters from get query.
  $url = isset($query['url']) ? $query['url'] : FALSE;

  // Finalize page if url doesn't been sent.
  if (!$url) {
    drupal_exit();
  }

  // Get RDF XML structure.
  $rdf_xml = arc2_rdf_xml($url);

  // Set headers for rdf xml file outputting.
  header('Content-Type: application/rdf+xml');
  header('Content-Disposition: attachment; filename="opendata.rdf"');
  header('Content-Length: ' . strlen($rdf_xml));

  // Return xml file.
  print $rdf_xml;

  // Finalize page correctly.
  drupal_exit();
}

/**
 * Page callback (arc2/print).
 */
function arc2_print_page() {
  // Init variables.
  $content = array();

  // Get $_GET parameters for current page.
  $query = drupal_get_query_parameters();

  // Get some parameters from get query.
  $url = isset($query['url']) ? $query['url'] : FALSE;

  // Finalize page if url doesn't been sent.
  if (!$url) {
    return $content;
  }

  // Get RDF XMK structure.
  $rdf_xml = arc2_rdf_xml($url);

  // Prepare code for display for user.
  $rdf_xml = '<pre>' . htmlspecialchars($rdf_xml) . '</pre>';

  // Add RDF XML code to content.
  $content['rdf_xml'] = array(
    '#markup' => $rdf_xml,
  );

  return $rdf_xml;
}

/**
 * Create RDF XML structure by url.
 */
function arc2_rdf_xml($url) {
  // Return if arc2 library doesn't exist.
  if (!arc2() || !$url) {
    return FALSE;
  }

  // Create new html parser object.
  $parser = ARC2::getSemHTMLParser();

  // Get rdf xml structure by parsing url.
  $parser->parse($url);
  $parser->extractRDF('rdfa');
  $triples = $parser->getTriples();
  $rdf_xml = $parser->toRDFXML($triples);
  return $rdf_xml;
}
